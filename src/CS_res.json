[
	{
		"code": "CS 100",
		"name": "Introduction to Computing through Applications",
		"prereq": [],
		"Note": " ",
		"id": 4360,
		"children": [],
		"antireq": [],
		"description": "Using personal computers as effective problem solving tools for the present and the future. Effective use of spreadsheets to process, manipulate, and visualize numeric and textual information. Introduction to the Internet, World Wide Web, HTML, and XML. Algorithms underlying the functional components of web search engines and their influence on data access. Using wikis to publish, reshape, and organize data collaboratively.",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 105",
		"name": "Introduction to Computer Programming 1",
		"prereq": [],
		"Note": " ",
		"id": 15054,
		"children": [],
		"antireq": ["CS 115"],
		"description": "An introduction to the fundamentals of computer programming through media computation. Students will learn to write interactive graphical programs. Fundamental language concepts such as variables, conditionals, loops, functions, and arrays. Programming concepts such as coding style, modular design, testing, and debugging. Media concepts such as 2D graphics drawing, input, animation, and image processing.",
		"offered": ["F"]
	},
	{
		"code": "CS 106",
		"name": "Introduction to Computer Programming 2",
		"prereq": ["CS 105"],
		"Note": " ",
		"id": 15055,
		"children": [],
		"antireq": ["CS 115"],
		"description": "A continuation of the introduction to computer programming begun in CS 105. The use of programming, in conjunction with libraries, as a means of solving practical problems in art, design, and data processing. Basic text processing, manipulation of images and sound, handling and visualization of tabular and hierarchical data. Introductions to user interfaces, physical simulation, and object-oriented programming.",
		"offered": ["W"]
	},
	{
		"code": "CS 115",
		"name": "Introduction to Computer Science 1",
		"prereq": [],
		"Note": "[Note: See Note 2 above. ",
		"offered": ["F", "W", "S"],
		"id": 12765,
		"children": [],
		"antireq": ["CS 135"],
		"description": "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming. Function definition and application. Tracing via substitution. Design, testing, and documentation. Recursive data definitions. Lists and trees. Functional and data abstraction.\n"
	},
	{
		"code": "CS 116",
		"name": "Introduction to Computer Science 2",
		"prereq": ["CS 115", "CS 135", "CS 145"],
		"Note": " ",
		"id": 12766,
		"children": [],
		"antireq": ["CS 136", "CS 137", "CS 138", "CS 146"],
		"description": "This course builds on the techniques and patterns learned in CS 115 while making the transition to use of an imperative language. Generative and structural recursion. Mutation (assignment) and its role in an imperative language. Primitive types and basic I/O. Sequencing, selection, looping. Function definition and use. File and console I/O. Issues in computer science.",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 135",
		"name": "Designing Functional Programs",
		"prereq": [],
		"Note": "[Note: See Note 2 above. ",
		"offered": ["F", "W"],
		"id": 12040,
		"children": [],
		"antireq": ["CS 115"],
		"description": "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming. Syntax and semantics of a functional programming language. Tracing via substitution. Design, testing, and documentation. Linear and nonlinear data structures. Recursive data definitions. Abstraction and encapsulation. Generative and structural recursion. Historical context. "
	},
	{
		"code": "CS 136",
		"name": "Elementary Algorithm Design and Data Abstraction",
		"prereq": ["CS 115", "CS 116", "CS 135", "CS 145"],
		"Note": "[Note: See Note 2 above. ",
		"offered": ["F", "W", "S"],
		"id": 12041,
		"children": [],
		"antireq": ["CS 115"],
		"description": "This course builds on the techniques and patterns learned in CS 135 while making the transition to use an imperative language. It introduces the design and analysis of algorithms, the management of information, and the programming mechanisms and methodologies required in implementations. Topics discussed include iterative and recursive sorting algorithms; lists, stacks, queues, trees, and their application; abstract data types and their implementations. "
	},
	{
		"code": "CS 137",
		"name": "Programming Principles",
		"prereq": [],
		"Note": " ",
		"id": 12886,
		"description": "Review of fundamental programming concepts and their application. Procedures and parameter passing. Arrays and structures. Recursion. Sorting. Pointers and simple dynamic structures. Space and time analysis of designs. Design methodologies.",
		"children": [],
		"antireq": [],
		"offered": ["F"]
	},
	{
		"code": "CS 138",
		"name": "Introduction to Data Abstraction and Implementation",
		"prereq": ["CS 137"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["W"],
		"id": 12887,
		"children": [],
		"antireq": [],
		"description": "Software abstractions via elementary data structures and their implementation; encapsulation and modularity; class and interface definitions; object instantiation; recursion; elementary abstract data types, including sequences, stacks, queues, and trees; implementation using linked structures and arrays; vectors and strings; memory models; automatic vs. dynamic memory management. "
	},
	{
		"code": "CS 145",
		"name": "Designing Functional Programs (Advanced Level)",
		"prereq": [],
		"Note": "[Note: See Note 2 above. This course may be substituted for CS 135 in any degree plan or for prerequisite purposes. ",
		"offered": ["F"],
		"id": 12767,
		"children": [],
		"antireq": [],
		"description": "CS 145 is an advanced-level version of CS 135. "
	},
	{
		"code": "CS 146",
		"name": "Elementary Algorithm Design and Data Abstraction (Advanced Level)",
		"prereq": ["CS 145"],
		"Note": "[Note: See Note 2 above. This course may be substituted for CS 136 in any degree plan or for prerequisite purposes. Students who receive a good grade in CS 135 may contact the instructor of CS 146 to seek admission without the formal prerequisites. ",
		"offered": ["W"],
		"id": 13657,
		"children": [],
		"antireq": ["CS 136", "CS 137", "CS 138", "CS 116"],
		"description": "CS 146 is an advanced-level version of CS 136. "
	},
	{
		"code": "CS 200",
		"name": "Concepts for Advanced Computer Usage",
		"prereq": [],
		"Note": " ",
		"id": 4372,
		"description": "Important concepts underlying major personal computer application categories; methodologies for learning and evaluating software; operating system and hardware design from the user's point of view, with implications for maintaining a personal computer. Students are encouraged to use their own personal computer for assignments. Social media and the effect of technology on society are explored throughout the course.",
		"children": [],
		"antireq": [],
		"offered": ["W", "S"]
	},
	{
		"code": "CS 230",
		"name": "Introduction to Computers and Computer Systems",
		"prereq": ["CS 116", "CS 136", "CS 138", "CS 146"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["W", "S"],
		"id": 4374,
		"children": [],
		"antireq": ["CS 241"],
		"description": "Basic computer architecture, organization, system services, and software. Typology of processors, memory, I/O devices and their performance. "
	},
	{
		"code": "CS 231",
		"name": "Algorithmic Problem Solving",
		"prereq": ["CS 116", "CS 136", "CS 138", "CS 146"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["S"],
		"id": 15400,
		"children": [],
		"antireq": ["CS 341"],
		"description": "The study of the steps required to solve real-world problems on a computer, including problem specification, choice of algorithmic paradigm, analysis, and implementation. Topics include exhaustive search, divide and conquer, greedy, and dynamic programming approaches. "
	},
	{
		"code": "CS 234",
		"name": "Data Types and Structures",
		"prereq": ["CS 116", "CS 136", "CS 138", "CS 146"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "S"],
		"id": 4375,
		"children": [],
		"antireq": ["CS 240"],
		"description": "Top-down design of data structures. Using representation-independent data types. Introduction to commonly used data types, including lists, sets, mappings, and trees. Selection of data representation. "
	},
	{
		"code": "CS 240",
		"name": "Data Structures and Data Management",
		"prereq": ["CS 241", "CS 245", "CS 246", "CS 247"],
		"Note": "[Note: Enrolment is restricted; see Note 1 above.  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W", "S"],
		"id": 4377,
		"children": [],
		"antireq": ["CS 234"],
		"description": "Introduction to widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms. Specific topics include priority queues, sorting, dictionaries, data structures for text processing. "
	},
	{
		"code": "CS 240E",
		"name": "Data Structures and Data Management (Enriched)",
		"prereq": ["CS 241", "CS 245", "CS 246", "CS 247"],
		"Note": "[Note: See notes 1 and 9 above. CS 240E may be substituted for CS 240 wherever the latter is a requirement. Enrolment is restricted.  is not scheduled and students are expected to find time in open hours to complete their work.",
		"offered": ["F", "W", "S"],
		"id": 15405,
		"children": [],
		"antireq": ["CS 234"],
		"description": "Enriched version of CS 240. "
	},
	{
		"code": "CS 241",
		"name": "Foundations of Sequential Programs",
		"prereq": ["CS 136", "CS 146", "CS 138", "CS 246"],
		"Note": "[Note: Enrolment is restricted; see Note 1 above.  is not scheduled and students are expected to find time in open hours to complete their work. CS 251 is a recommended corequisite. ",
		"offered": ["F", "W", "S"],
		"id": 4378,
		"children": [],
		"antireq": ["CS 230"],
		"description": "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages. "
	},
	{
		"code": "CS 241E",
		"name": "Foundations of Sequential Programs (Enriched)",
		"prereq": ["CS 136", "CS 146", "CS 138"],
		"Note": "[Note: See notes 2 and 9 above. CS 241E may be substituted for CS 241 wherever the latter is a requirement. Enrolment is restricted.  is not scheduled and students are expected to find time in open hours to complete their work. CS 251 is a recommended corequisite. Offered: As permitted by demand and available resources]",
		"id": 15406,
		"children": [],
		"antireq": ["CS 230"],
		"description": "Enriched version of CS 241. ",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 245",
		"name": "Logic and Computation",
		"prereq": ["CS 136", "CS 138", "CS 146"],
		"Note": "[Note: Enrolment is restricted; see Note 1 above. ",
		"offered": ["F", "W", "S"],
		"id": 11405,
		"children": [],
		"antireq": [],
		"description": "Propositional and predicate logic. Soundness and completeness and theirimplications. Unprovability of formulae in certain systems. Undecidability of problems in computation, including the halting problem. Reasoning about programs. Correctness proofs for both recursive and iterative program constructions. "
	},
	{
		"code": "CS 245E",
		"name": "Logic and Computation (Enriched)",
		"prereq": ["CS 136", "CS 146"],
		"Note": "[Note: See notes 1 and 9 above. CS 245E may be substituted for CS 245 wherever the latter is a requirement. Enrolment is restricted.",
		"offered": ["F", "W", "S"],
		"id": 15407,
		"children": [],
		"antireq": [],
		"description": "Enriched version of CS 245. "
	},
	{
		"code": "CS 246",
		"name": "Object-Oriented Software Development",
		"prereq": ["CS 136", "CS 138", "CS 146"],
		"Note": "[Note: Enrolment is restricted; see Note 1 above.  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W", "S"],
		"id": 4380,
		"children": [],
		"antireq": ["CS 247"],
		"description": "Introduction to object-oriented programming and to tools and techniques for software development. Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites. "
	},
	{
		"code": "CS 246E",
		"name": "Object-Oriented Software Development (Enriched)",
		"prereq": ["CS 136", "CS 146"],
		"Note": "[Note: See notes 1 and 9 above. CS 246E may be substituted for CS 246 wherever the latter is a requirement. Enrolment is restricted.  is not scheduled and students are expected to find time in open hours to complete their work.",
		"offered": ["F", "W", "S"],
		"id": 15408,
		"children": [],
		"antireq": [],
		"description": "Enriched version of CS 246. "
	},
	{
		"code": "CS 247",
		"name": "Software Engineering Principles",
		"prereq": ["CS 241"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["S"],
		"id": 13805,
		"children": [],
		"antireq": ["CS 246"],
		"description": "Systematic methods for designing, coding, testing, and documenting medium-sized programs. Major topics include abstraction, modularity, software modeling, object-oriented programming and design, generic programming, testing and debugging. "
	},
	{
		"code": "CS 251",
		"name": "Computer Organization and Design",
		"prereq": ["CS 136", "CS 138", "CS 146"],
		"Note": "[Note: Students enrolled in CS/DHW should enrol in ECE 222. Enrolment is restricted; see Note 1 above.  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W", "S"],
		"id": 4382,
		"children": [],
		"antireq": [],
		"description": "Overview of computer organization and performance. Basics of digital logic design. Combinational and sequential elements. Data representation and manipulation. Basics of processor design. Pipelining. Memory hierarchies. Multiprocessors. "
	},
	{
		"code": "CS 330",
		"name": "Management Information Systems",
		"prereq": ["CS 106", "CS 116", "CS 136", "CS 138", "CS 146"],
		"Note": " ",
		"id": 4385,
		"children": [],
		"antireq": ["CS 480", "CS 490"],
		"description": "An introduction to information systems and their strategic role in business. Topics include types of information systems, organizational requirements, systems development strategies, decision support systems, data and information management, and information systems management, control and implementation.",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 335",
		"name": "Computational Methods in Business and Finance",
		"prereq": ["CS 116", "CS 136", "CS 138", "CS 146"],
		"Note": " ",
		"id": 13658,
		"children": [],
		"antireq": ["CS 470", "CS 471"],
		"description": "An introduction to numerical methods for business and finance. Floating-point arithmetic, interpolation. Methods for portfolio optimization and contingent-claims valuation. Solution of nonlinear equations. Monte Carlo methods, lattice methods, simulation of hedging strategies.",
		"offered": ["F", "W"]
	},
	{
		"code": "CS 338",
		"name": "Computer Applications in Business: Databases",
		"prereq": ["CS 230", "CS 231", "CS 234", "CS 246", "CS 330"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W", "S"],
		"id": 4390,
		"children": [],
		"antireq": ["CS 348"],
		"description": "A user-oriented approach to the management of large collections of data. Methods used for the storage, selection and presentation of data. Common database management systems. "
	},
	{
		"code": "CS 341",
		"name": "Algorithms",
		"prereq": ["CS 240"],
		"Note": "[Note: Enrolment is restricted; see Note 1 above.  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W", "S"],
		"id": 4392,
		"children": [],
		"antireq": ["CS 231"],
		"description": "The study of efficient algorithms and effective algorithm design techniques. Program design with emphasis on pragmatic and mathematical aspects of program efficiency. Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications. "
	},
	{
		"code": "CS 343",
		"name": "Concurrent and Parallel Programming",
		"prereq": ["CS 350"],
		"Note": "[Note: Enrolment is restricted; see Note 1 above.  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W"],
		"id": 11417,
		"children": [],
		"antireq": [],
		"description": "An introduction to concurrent and parallel programming, with an emphasis on language constructs. Major topics include: exceptions, coroutines, atomic operations, critical sections, mutual exclusion, semaphores, high-level concurrency, deadlock, interprocess communication, process structuring, shared memory and distributed architectures. Students will learn how to structure, implement and debug concurrent programs. "
	},
	{
		"code": "CS 348",
		"name": "Introduction to Database Management",
		"prereq": ["CS 240"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W", "S"],
		"id": 4417,
		"children": [],
		"antireq": ["CS 338"],
		"description": "The main objective of this course is to introduce students to fundamentals of database technology by studying databases from three viewpoints: those of the database user, the database designer, and the database administrator. It teaches the use of a database management system (DBMS) by treating it as a black box, focusing only on its functionality and its interfaces. Topics include: introduction to database systems, relational database systems, database design methodology, SQL and interfaces, database application development, concept of transactions, ODBC, JDBC, database tuning, database Administration, and current topics (distributed databases, data warehouses, data mining). "
	},
	{
		"code": "CS 349",
		"name": "User Interfaces",
		"prereq": ["CS 241"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W", "S"],
		"id": 11727,
		"children": [],
		"antireq": [],
		"description": "An introduction to contemporary user interfaces, including the basics of human-computer interaction, the user interface design/evaluation process, the event abstraction, user interface components, specification of user interfaces, and the architectures within which user interfaces are developed. Implementation and evaluation of a typical user interface is considered. "
	},
	{
		"code": "CS 350",
		"name": "Operating Systems",
		"prereq": ["CS 240", "CS 241", "CS 246", "CS 251"],
		"Note": "[Note: Enrolment is restricted; see Note 1 above.  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W", "S"],
		"id": 11416,
		"children": [],
		"antireq": [],
		"description": "An introduction to the fundamentals of operating system function, design, and implementation. Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security. "
	},
	{
		"code": "CS 360",
		"name": "Introduction to the Theory of Computing",
		"prereq": ["CS 240", "CS 241"],
		"Note": "[Note: Enrolment is restricted; see Note 1 above. ",
		"offered": ["F", "W", "S"],
		"id": 4398,
		"children": [],
		"antireq": ["CS 365"],
		"description": "Models of computers including finite automata and Turing machines. Basics of formal languages with applications to the syntax of programming languages. Alternate characterizations of language classes. Proving unrecognizability. Unsolvable problems and their relevance to the semantics of programming. "
	},
	{
		"code": "CS 365",
		"name": "Models of Computation",
		"prereq": ["CS 240", "CS 241"],
		"Note": "[Note: CS 365 may be substituted for CS 360 in any degree plan or for prerequisite purposes; enrolment is restricted; see Note 1 above. ",
		"offered": ["W"],
		"id": 11347,
		"children": [],
		"antireq": ["CS 360"],
		"description": "Finite automata and regular expressions. Pushdown automata and context-free grammars. Turing machines and undecidability. Time and space complexity. Diagonalization and hierarchies. CS 365 covers the material in CS 360 at an accelerated pace plus additional topics in computational complexity. "
	},
	{
		"code": "CS 370",
		"name": "Numerical Computation",
		"prereq": ["CS 231", "CS 234", "CS 241", "CS 246"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W", "S"],
		"id": 4400,
		"children": [],
		"antireq": ["CS 371", "CS 335"],
		"description": "Principles and practices of basic numerical computation as a key aspect of scientific computation. Visualization of results. Approximation by splines, fast Fourier transforms, solution of linear and nonlinear equations, differential equations, floating point number systems, error, stability. Presented in the context of specific applications to image processing, analysis of data, scientific modeling. "
	},
	{
		"code": "CS 371",
		"name": "Introduction to Computational Mathematics",
		"prereq": ["CS 116", "CS 136", "CS 138", "CS 146"],
		"Note": "[Note: This course may be substituted for CS 370 in any degree plan or for prerequisite purposes;  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["W", "S"],
		"id": 11363,
		"children": [],
		"antireq": ["CS 370", "CS 335"],
		"description": "A rigorous introduction to the field of computational mathematics. The focus is on the interplay between continuous models and their solution via discrete processes. Topics include: pitfalls in computation, solution of linear systems, interpolation, discrete Fourier transforms and numerical integration. Applications are used as motivation. "
	},
	{
		"code": "CS 383",
		"name": "Computational Digital Art Studio",
		"prereq": ["CS 240"],
		"Note": " ",
		"id": 15143,
		"children": [],
		"antireq": [],
		"description": "An upper-level studio course to create computational projects that function as art works and aesthetic experiences. Students will work in interdisciplinary teams to combine computer science principles with fine art technical and conceptual skills.",
		"offered": ["W"]
	},
	{
		"code": "CS 398",
		"name": "Topics in Computer Science",
		"prereq": ["CS 240", "CS 246", "CS 247"],
		"Note": " ",
		"id": 11409,
		"children": [],
		"antireq": [],
		"description": "See the Course Offerings List for topics available.",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 399",
		"name": "Readings in Computer Science",
		"prereq": ["CS 240", "CS 246", "CS 247"],
		"Note": " ",
		"id": 11410,
		"children": [],
		"antireq": [],
		"description": "Reading course as announced by the department.",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 430",
		"name": "Applications Software Engineering",
		"prereq": ["CS 330"],
		"Note": " ",
		"id": 4404,
		"children": [],
		"antireq": ["CS 446"],
		"description": "An investigation into the role and function of software engineering practice in the construction of computer based systems. Topics include: requirements and specification; documentation techniques; analysis and design; implementation; testing and maintenance; management issues.",
		"offered": ["F", "W"]
	},
	{
		"code": "CS 431",
		"name": "Data-Intensive Distributed Analytics",
		"prereq": ["CS 231", "CS 251", "CS 234", "CS 330", "CS 341"],
		"Note": " ",
		"id": 15547,
		"children": [],
		"antireq": ["CS 451"],
		"description": "Introduces non-CS major students to infrastructure for data-intensive analytics, with a focus on abstractions, frameworks, and algorithms that allow developers to distribute computation across many machines. Topics include core concepts (partitioning, replication, locality, consistency), computational models (MapReduce, dataflows, stream processing, bulk-synchronous parallel), and applications.",
		"offered": ["W", "S"]
	},
	{
		"code": "CS 432",
		"name": "Business Systems Analysis",
		"prereq": ["CS 330"],
		"Note": " ",
		"id": 4405,
		"children": [],
		"antireq": ["CS 445"],
		"description": "Survey of organization and management theory. Systems theory and the systems approach. Systems design. Database concepts. Implementation and evaluation of computer based information systems.",
		"offered": ["F", "S"]
	},
	{
		"code": "CS 436",
		"name": "Networks and Distributed Computer Systems",
		"prereq": ["CS 230", "CS 241", "CS 246", "CS 251"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["W"],
		"id": 4407,
		"children": [],
		"antireq": ["CS 454"],
		"description": "An introduction to networks, protocols, and distributed systems. Layered models, resource management, naming, addressing and routing, reliable communication, security, and higher-level services. "
	},
	{
		"code": "CS 442",
		"name": "Principles of Programming Languages",
		"prereq": ["CS 240"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["W"],
		"id": 4410,
		"children": [],
		"antireq": [],
		"description": "An exposure to important concepts and issues in contemporary programming languages. Data types, abstraction, and polymorphism. Program structure. Lambda calculus and functional programming, logic programming, object-oriented programming. Semantics of programming languages. Critical comparison of language features and programming methodologies using examples drawn from a variety of programming languages including Lisp, Prolog, ML, Ada, Smalltalk, Icon, APL, and Lucid. Programming assignments involve the use of some of these languages. "
	},
	{
		"code": "CS 444",
		"name": "Compiler Construction",
		"prereq": ["CS 350"],
		"Note": "[Note: This course involves project work. ",
		"offered": ["W"],
		"id": 4412,
		"children": [],
		"antireq": [],
		"description": "Phases of compilation. Lexical analysis and a review of parsing. Compiler-compilers and translator writing systems. LEX and YACC. Scope rules, block structure, and symbol tables. Runtime stack management. Parameter passage mechanisms. Stack storage organization and templates. Heap storage management. Intermediate code. Code generation. Macros. "
	},
	{
		"code": "CS 445",
		"name": "Software Requirements Specification and Analysis",
		"prereq": ["CS 350"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W"],
		"id": 4413,
		"children": [],
		"antireq": [],
		"description": "Introduces students to the requirements definition phase of software development. Models, notations, and processes for software requirements identification, representation, analysis, and validation. Cost estimation from early documents and specifications. "
	},
	{
		"code": "CS 446",
		"name": "Software Design and Architectures",
		"prereq": ["CS 350"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["W", "S"],
		"id": 4414,
		"children": [],
		"antireq": ["CS 430"],
		"description": "Introduces students to the design, implementation, and evolution phases of software development. Software design processes, methods, and notation. Implementation of designs. Evolution of designs and implementations. Management of design activities. "
	},
	{
		"code": "CS 447",
		"name": "Software Testing, Quality Assurance and Maintenance",
		"prereq": ["CS 350"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["W"],
		"id": 4416,
		"children": [],
		"antireq": [],
		"description": "Introduces students to systematic testing of software systems. Software verification, reviews, metrics, quality assurance, and prediction of software reliability and availability. Related management issues. "
	},
	{
		"code": "CS 448",
		"name": "Database Systems Implementation",
		"prereq": ["CS 348", "CS 350"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["W"],
		"id": 12300,
		"children": [],
		"antireq": [],
		"description": "The objective of this course is to introduce students to fundamentals of building a relational database management system. The course focuses on the database engine core technology by studying topics such as storage management (data layout, disk-based data structures), indexing, query processing algorithms, query optimization, transactional concurrency control, logging and recovery. "
	},
	{
		"code": "CS 449",
		"name": "Human-Computer Interaction",
		"prereq": ["CS 240", "CS 241"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work.]",
		"id": 13910,
		"children": [],
		"antireq": [],
		"description": "An introduction to the fundamental theories, methods, and research in the design and evaluation of novel computational artifacts designed to meet real-world human needs. ",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 450",
		"name": "Computer Architecture",
		"prereq": ["CS 245", "CS 350"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["W"],
		"id": 4418,
		"children": [],
		"antireq": [],
		"description": "The course is intended to provide the student with an appreciation of modern computer design and its relation to system architecture, compiler technology and operating system functionality. The course places an emphasis on design based on the measurement of performance and its dependency on parallelism, efficiency, latency and resource utilization. "
	},
	{
		"code": "CS 451",
		"name": "Data-Intensive Distributed Computing",
		"prereq": ["CS 341", "CS 348", "CS 350"],
		"Note": " ",
		"id": 15315,
		"children": [],
		"antireq": [],
		"description": "Introduces students to infrastructure for data-intensive computing, with a focus on abstractions, frameworks, and algorithms that allow developers to distribute computations across many machines. \u00a0Topics include core concepts (partitioning, replication, locality, consistency), computational models (MapReduce, dataflows, stream processing, bulk-synchronous parallel), and applications.",
		"offered": ["W", "S"]
	},
	{
		"code": "CS 452",
		"name": "Real-time Programming",
		"prereq": ["CS 350"],
		"Note": "[Note: This course involves project work. ",
		"offered": ["W", "S"],
		"id": 4419,
		"children": [],
		"antireq": [],
		"description": "Intended to give students experience with tools and techniques of real-time programming, this course includes not only issues of microcomputer architecture and a real-time programming language and operating system, but also hands-on experience programming a microcomputer for applications such as process control, data acquisition and communication. "
	},
	{
		"code": "CS 454",
		"name": "Distributed Systems",
		"prereq": ["CS 350"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["W", "S"],
		"id": 4420,
		"children": [],
		"antireq": [],
		"description": "An introduction to distributed systems, emphasizing the multiple levels of software in such systems. Specific topics include fundamentals of data communications, network architecture and protocols, local-area networks, concurrency control in distributed systems, recovery in distributed systems, and clock synchronization. "
	},
	{
		"code": "CS 456",
		"name": "Computer Networks",
		"prereq": ["CS 350"],
		"Note": " ",
		"id": 10167,
		"children": [],
		"antireq": ["CS 436"],
		"description": "An introduction to network architectures and protocols, placing emphasis on protocols used in the Internet. Specific topics include application layer protocols, network programming, transport protocols, routing, multicast, data link layer issues, multimedia networking, network security, and network management.",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 457",
		"name": "System Performance Evaluation",
		"prereq": ["CS 246", "CS 247"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work.]",
		"id": 4422,
		"children": [],
		"antireq": [],
		"description": "Basic techniques of system performance evaluation. Specific topics include: performance modeling, discrete event simulation, verification and validation of simulation models, analysis of simulation output, analysis of single server queue and queueing networks, modeling of computer systems, networks, and other queueing or non-queueing systems. ",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 458",
		"name": "Computer Security and Privacy",
		"prereq": ["CS 350"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W", "S"],
		"id": 12980,
		"children": [],
		"antireq": [],
		"description": "Security and privacy issues in various aspects of computing. Specific topics include: comparing security and privacy, program security, writing secure programs, controls against program threats, operating system security, formal security models, network security, Internet application security and privacy, privacy-enhancing technologies, database security and privacy, inference, data mining, security policies, physical security, economics of security, and legal and ethical issues. "
	},
	{
		"code": "CS 462",
		"name": "Formal Languages and Parsing",
		"prereq": ["CS 360", "CS 365"],
		"Note": " ",
		"id": 4424,
		"children": [],
		"antireq": [],
		"description": "Languages and their representations. Grammars --Chomsky hierarchy. Regular sets and sequential machines. Context-free grammars -- normal forms, basic properties. Pushdown automata and transducers. Operations on languages. Undecidable problems in language theory. Applications to the design of programming languages and compiler construction.",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 466",
		"name": "Algorithm Design and Analysis",
		"prereq": ["CS 341"],
		"Note": " ",
		"id": 4426,
		"children": [],
		"antireq": [],
		"description": "Algorithmic approaches and methods of assessment that reflect a broad spectrum of criteria, including randomized algorithms, amortized analysis, lower bounds, approximation algorithms, and on-line algorithms. Particular examples will be chosen from different areas of active research and application.",
		"offered": ["F", "S"]
	},
	{
		"code": "CS 467",
		"name": "Introduction to Quantum Information Processing",
		"prereq": [],
		"Note": " ",
		"id": 11497,
		"children": [],
		"antireq": [],
		"description": "Basics of computational complexity; basics of quantum information; quantum phenomena; quantum circuits and universality; relationship between quantum and classical complexity classes; simple quantum algorithms; quantum Fourier transform; Shor factoring algorithm; Grover search algorithm; physical realization of quantum computation; error-correction and fault-tolerance; quantum key distribution.",
		"offered": ["W"]
	},
	{
		"code": "CS 475",
		"name": "Computational Linear Algebra",
		"prereq": ["CS 370", "CS 371"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["S"],
		"id": 11444,
		"children": [],
		"antireq": ["CS 372", "CS 472"],
		"description": "Basic concepts and implementation of numerical linear algebra techniques and their use in solving application problems. Special methods for solving linear systems having special features. Direct methods: symmetric, positive definite, band, general sparse structures, ordering methods.\nIterative methods: Jacobi, Gauss-Seidel, SOR, conjugate gradient. Computing and using orthogonal factorizations of matrices. QR and SVD methods for solving least squares problems. Eigenvalue and singular value decompositions. Computation and uses of these decompositions in practice. "
	},
	{
		"code": "CS 476",
		"name": "Numeric Computation for Financial Modeling",
		"prereq": ["CS 370", "CS 371"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. Students who receive a good grade in CS 335 may contact the instructor of CS 476 to seek admission without the formal prerequisites. ",
		"offered": ["W"],
		"id": 3352,
		"children": [],
		"antireq": [],
		"description": "The interaction of financial models, numerical methods, and computing environments. Basic computational aspects of option pricing and hedging. Numerical methods for stochastic differential equations, strong and weak convergence. Generating correlated random numbers. Time-stepping methods. Finite difference methods for the Black-Scholes equation. Discretization, stability, convergence. Methods for portfolio optimization, effect of data errors on portfolio weights. "
	},
	{
		"code": "CS 480",
		"name": "Introduction to Machine Learning",
		"prereq": ["CS 341"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W", "S"],
		"id": 15515,
		"children": [],
		"antireq": [],
		"description": "Introduction to modeling and algorithmic techniques for machines to learn concepts from data. Generalization: underfitting, overfitting, cross-validation. Tasks: classification, regression, clustering. Optimization-based learning: loss minimization. regularization. Statistical learning: maximum likelihood, Bayesian learning. Algorithms: nearest neighbour, (generalized) linear regression, mixtures of Gaussians, Gaussian processes, kernel methods, support vector machines, deep learning, sequence learning, ensemble techniques. Large scale learning: distributed learning and stream learning. Applications: Natural language processing, computer vision, data mining, human computer interaction, information retrieval. "
	},
	{
		"code": "CS 482",
		"name": "Computational Techniques in Biological Sequence Analysis",
		"prereq": ["CS 341"],
		"Note": " ",
		"id": 4434,
		"children": [],
		"antireq": [],
		"description": "Computer science principles and algorithms in biological sequence analysis. Topics include algorithms for sequence comparison, for large-scale database search in biological databases, for sequence assembly, for evolutionary tree reconstruction, for identifying important features in DNA and RNA sequences, and underlying computational techniques for understanding strings and trees and for making probabilistic inferences.",
		"offered": ["W"]
	},
	{
		"code": "CS 484",
		"name": "Computational Vision",
		"prereq": ["CS 370", "CS 371"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work.]",
		"id": 13912,
		"children": [],
		"antireq": [],
		"description": "Introduction to image and vision understanding by computer. Camera-system geometry, image formation and lighting, and image acquisition. Basic visual processes for recognition of edges, regions, lines, and surfaces. Processing of stereo images, and motion in image sequences. Object recognition. Applications of computer-vision systems. ",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 485",
		"name": "Statistical and Computational Foundations of Machine Learning",
		"prereq": ["CS 341"],
		"Note": " ",
		"id": 13911,
		"children": [],
		"antireq": [],
		"description": "Extracting meaningful patterns from random samples of large data sets. Statistical analysis of the resulting problems. Common algorithmic paradigms for such tasks. Central concepts: VC-dimension, margins of a classifier, sparsity and description length, other types of regularization. Performance guarantees: generalization bounds, data dependent error bounds and computational complexity of learning algorithms. Common paradigms: neural networks, kernel methods and support-vector machines, boosting, nearest neighbor classifiers. Applications to data mining.",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 486",
		"name": "Introduction to Artificial Intelligence",
		"prereq": ["CS 341"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["F", "W", "S"],
		"id": 4435,
		"children": [],
		"antireq": [],
		"description": "Goals and methods of artificial intelligence. Methods of general problem solving. Knowledge representation and reasoning. Planning. Reasoning about uncertainty. Machine learning. Multi-agent systems. Natural language processing. "
	},
	{
		"code": "CS 487",
		"name": "Introduction to Symbolic Computation",
		"prereq": ["CS 231", "CS 234", "CS 240"],
		"Note": "[Note:  is not scheduled and students are expected to find time in open hours to complete their work. ",
		"offered": ["W"],
		"id": 4436,
		"children": [],
		"antireq": [],
		"description": "An introduction to the use of computers for symbolic mathematical computation, involving traditional mathematical computations such as solving linear equations (exactly), analytic differentiation and integration of functions, and analytic solution of differential equations. "
	},
	{
		"code": "CS 488",
		"name": "Introduction to Computer Graphics",
		"prereq": ["CS 341", "CS 350", "CS 370", "CS 371"],
		"Note": "[Note: This course involves project work. ",
		"offered": ["F", "W", "S"],
		"id": 4437,
		"children": [],
		"antireq": [],
		"description": "Software and hardware for interactive computer graphics. Implementation of device drivers, 3-D transformations, clipping, perspective, and input routines. Data structures, hidden surface removal, colour shading techniques, and some additional topics will be covered. "
	},
	{
		"code": "CS 489",
		"name": "Advanced Topics in Computer Science",
		"prereq": [],
		"Note": " ",
		"id": 10044,
		"description": "See the Course Offerings List for topics available.",
		"children": [],
		"antireq": [],
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 490",
		"name": "Information Systems Management",
		"prereq": ["CS 350"],
		"Note": " ",
		"id": 4433,
		"children": [],
		"antireq": [],
		"description": "The integration of business and technical considerations in the design, implementation and management of information systems. Topics include: IS planning and development; business, management, executive, and strategic information systems, including case studies of selected large- scale systems; decision support systems; end-user training and development; systems security, disaster planning and recovery. Practical examples of information systems in industry.",
		"offered": ["W", "S"]
	},
	{
		"code": "CS 492",
		"name": "The Social Implications of Computing",
		"prereq": ["CS 240"],
		"Note": " ",
		"id": 4438,
		"children": [],
		"antireq": [],
		"description": "This course is designed to consider the problems encountered by individuals, organizations and society as computer technology is adopted, with a view towards assessing possible courses of action.",
		"offered": ["W", "S"]
	},
	{
		"code": "CS 493",
		"name": "Team Project 1",
		"prereq": ["CS 341", "CS 350"],
		"Note": " ",
		"id": 15545,
		"children": [],
		"antireq": [],
		"description": "Students work in teams on substantial open-ended computer science problems as part of the CS 493/494 course sequence. Lectures describe project management\u00a0fundamentals and ethical and legal issues in computing. Students form teams, select projects,\u00a0define project goals, perform risk assessment, establish\u00a0a project\u00a0plan, and\u00a0develop\u00a0a prototype. Possible project topics can include development of software systems, analysis of extensions to existing systems across the field, and\u00a0experimental computer science.",
		"offered": ["F"]
	},
	{
		"code": "CS 494",
		"name": "Team Project 2",
		"prereq": ["CS 493"],
		"Note": " ",
		"id": 15546,
		"children": [],
		"antireq": [],
		"description": "Continuing from CS 493, student teams continue development of their project, update project plans, explore design alternatives, perform testing, and analyze experimental results. Teams prepare and deliver technical presentations and demonstrations of their projects, and analyze ethical and legal aspects of their work.",
		"offered": ["W"]
	},
	{
		"code": "CS 497",
		"name": "Multidisciplinary Studies in Computer Science",
		"prereq": [],
		"Note": " ",
		"id": 12280,
		"children": [],
		"antireq": [],
		"description": "See the Course Offerings list for topics available.",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 499R",
		"name": "Readings in Computer Science",
		"prereq": [],
		"Note": "Department Consent Required",
		"id": 4444,
		"children": [],
		"antireq": [],
		"description": "Reading course as announced by the department.",
		"offered": ["F", "W", "S"]
	},
	{
		"code": "CS 499T",
		"name": "Honours Thesis",
		"prereq": [],
		"Note": "[Note: Offered for CR/NCR only. CS 499R is recommended. A detailed thesis proposal and names of a supervisor and reader are required.]",
		"id": 12560,
		"children": [],
		"antireq": [],
		"description": "The student will undertake new analysis, synthesis, measurement, or experimentation to produce a document that demonstrates a depth of understanding of a topic that goes beyond what is obtained in a standard undergraduate education. ",
		"offered": ["F", "W", "S"]
	}
]
